"use client"; // ‡∏¢‡∏±‡∏á‡∏Ñ‡∏á‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ

import { useState } from 'react'; // << ‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö "‡∏à‡∏î‡∏à‡∏≥"

export default function HomePage() {
  // ‡∏™‡∏£‡πâ‡∏≤‡∏á state ‡πÄ‡∏û‡∏∑‡πà‡∏≠ "‡∏à‡∏≥" ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡πÄ‡∏•‡∏∑‡∏≠‡∏Å, ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å (null)
  const [selectedMachine, setSelectedMachine] = useState<number | null>(null);

  const handleLogin = () => {
    // ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á ‡∏Å‡πá‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏ó‡∏≥‡∏≠‡∏∞‡πÑ‡∏£
    if (!selectedMachine) {
      alert("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ã‡∏±‡∏Å‡∏ú‡πâ‡∏≤‡∏Å‡πà‡∏≠‡∏ô‡∏Ñ‡πà‡∏∞");
      return;
    }

    const lineLoginUrl = "https://access.line.me/oauth2/v2.1/authorize";
    
    // ‡πÄ‡∏£‡∏≤‡∏à‡∏∞‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡πÉ‡∏ô state ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡πà‡∏á‡∏ï‡πà‡∏≠‡πÑ‡∏õ‡∏î‡πâ‡∏ß‡∏¢
    const stateData = {
      machine: selectedMachine,
      nonce: "12345abcde" // ‡∏Ñ‡πà‡∏≤‡∏™‡∏∏‡πà‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏à‡∏°‡∏ï‡∏µ
    };
    
    const params = {
      response_type: "code",
      client_id: process.env.NEXT_PUBLIC_LINE_CHANNEL_ID!,
      redirect_uri: `https://line-timer-project.vercel.app/api/auth/callback`,
      state: JSON.stringify(stateData), // ‡πÅ‡∏õ‡∏•‡∏á object ‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
      scope: "profile openid",
    };

    const queryString = new URLSearchParams(params).toString();
    
    window.location.href = `${lineLoginUrl}?${queryString}`;
  };

  const machines = [1, 2, 3, 4]; // ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ã‡∏±‡∏Å‡∏ú‡πâ‡∏≤

  return (
    <div className="container">
      <div className="card">
        <h1>üß∫ Washing & Drying üß∫</h1>
        <p>‡∏£‡πâ‡∏≤‡∏ô‡∏ã‡∏±‡∏Å-‡∏≠‡∏ö ‡∏à‡∏ö‡∏Ñ‡∏£‡∏ö‡∏ó‡∏µ‡πà‡πÄ‡∏î‡∏µ‡∏¢‡∏ß ‡∏´‡∏ô‡πâ‡∏≤‡πÇ‡∏•‡∏ï‡∏±‡∏™‡∏≠‡∏¥‡∏ô‡∏ó‡∏£‡πå</p>
        
        <div className="machine-selection">
          <h2>‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ã‡∏±‡∏Å‡∏ú‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì</h2>
          <div className="machine-buttons">
            {machines.map((num) => (
              <button
                key={num}
                className={`machine-button ${selectedMachine === num ? 'selected' : ''}`}
                onClick={() => setSelectedMachine(num)}
              >
                ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ó‡∏µ‡πà {num}
              </button>
            ))}
          </div>
          {selectedMachine && (
            <p className="selection-info">‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏•‡∏∑‡∏≠‡∏Å: **‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ó‡∏µ‡πà {selectedMachine}**</p>
          )}
        </div>

        <button 
          onClick={handleLogin} 
          className="line-button"
          disabled={!selectedMachine} // ‡∏õ‡∏∏‡πà‡∏°‡∏à‡∏∞‡∏Å‡∏î‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á
        >
          <img
            src="https://cdn.icon-icons.com/icons2/2429/PNG/512/line_logo_icon_147253.png"
            alt="LINE icon"
            className="line-icon"
          />
          ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏à‡∏±‡∏ö‡πÄ‡∏ß‡∏•‡∏≤ 25 ‡∏ô‡∏≤‡∏ó‡∏µ (‡∏î‡πâ‡∏ß‡∏¢ LINE)
        </button>

        <p className="footer-note">
          (‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏∞‡∏Ç‡∏≠‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå LINE ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°)
        </p>
      </div>
    </div>
  );
}